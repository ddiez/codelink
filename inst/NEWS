Package: codelink
====================

Version 1.32.0

o Minor fixes to documentation.

o Dropped the old term "Bioarray" (originally used for the first Codelink platform) from the DESCRIPTION file.

Version 1.30.0

o The CodelinkSet class has been adopted as the official supported class for storing Codelink data. Documentation about this topic has been improved, and a new vignette describing the CodelinkSet interface is available (Codelink_Introduction). Documentation for the old Codelink class has been moved to the Codelink_Legacy vignette.

o Before, readCodelink() assigned NA values to spots flagged as 'M' (MSR spot), 'I' (Irregular) and 'C' (Contaminated). This could cause some problems in large datasets during normalization. Because any row containing NAs is removed during normalization, when the number of samples increases the number of removed rowa increases as well, reducing drastically the number of de facto spots/probes used during normalization. Now, assigment of NA values is not performed anymore, the only exception being 'M' flagged spots, which have intensity values of -9999, and hence do not represent any measure of intensity. Many thanks to Emmanuelle Dantony for spotting this problem and subsequent feedback.

o Background and normalization methods are applied calling the appropriate functions in the limma package. Support for type- and flag-based weights has been included, and weights are automatically created by readCodelinkSet(). Weights can be used to modulate the contribution of some probes to normalization and during linear modeling more efficiently. Examples on how to use these utilities are documented in the vignette Codelink_Introduction.

o Added generic method normalize() for Codelink and CodelinkSet classes.

Version 1.24.0

o Improvements on how codPlotScatter() manages labels. Renamed generic scatter plot function plotma() to plotxy(), which better reflects the current status.

o Implemented missing function codPlotScatter() for CodelinkSet objects (accessible via codPlot(..., what = "scatter")). The implementation reuses the plotma()
  function used by codPlotMA(). By default the first array is plotted against the median. Thanks to William Michels for reporting this and testing the CodelinkSet
  framework.

o Minor improvements to linear model section in CodelinkSet-vignette. Now the code is evaluated.

Version 1.16.0

o Fixed check fail in windows machine by putting "multicore" in Enhancements, and checking if function "mclapply" is loaded. Addapted documentation to 
explain the new behavior.

o Added missing file (averageProbes.Rd) to the svn.

o Added CodelinkSetUnique class to store objects with unique probes. These objects use as featureNames the probe ID, and
  hence should be compatible with other packages that make use of featureNames() and the annotation packages.
  
o Added function averageProbes() that computes the average of duplicated probes in the array. Currently is does the mean(). The
  standard deviation is computed too and stored in the slot "sd" (no accessor method at the moment). This computation requires
  time and therefore a call to mclapply() in multicore package is implemented through the optional argument 'parallel' (FALSE by
  default). Use of 'parallel = TRUE' is not recommended on GUI (like the Cocoa R.app) (see multicore package for issues with this). 

o Added '...' to readCodelinkSet() so that it pass additional arguments (e.g. 'flag') to readCodelink(). Thank you to Luca Beltrame for the suggestion and patch.
o Now when readCodelinkSet() reads a list of files and the phenoData is not supplied it will create a default one, instead of failing.

o Version number bumped for BioC devel branch.

Version: 1.14.0

o Fixed bug in codCorrect() that would prevent the methods "half" and "subtract" for being available. Thanks to Fr?d?ric Boyer for reporting this.

o Fixed warnings about missing (or suspect) links in documentation. Added tem-
  plate man page for CodelinkSet class.

o Fixed warning on R CMD check about mismatch between objects and documentation.
